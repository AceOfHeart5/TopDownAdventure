Our last system for menus was terrible. It was spaghetti and confusing. Adding new menu options was hard just because I didn't understand my own code. We need to think of a better system for this one. So let's make a menu object that acts as a parent object. We'll update it in the same way we update actors (by using the user events). Perhaps we could even make the menu options themselves be objects? We could think of menus as like actors, and options as like states. Actually that's kind of silly... because we're not going to run different code every frame for the meny depending on the option. But we WILL run different code depending on the menu choice. Ok... so maybe they should be separate objects. The menus will just have "choice" objects that we add to it in the create event. These choices are actual objects run code (a user event). We could have variables/scripts/events that return a true or false depending on whether or not the "choice" has finished what it needs to do. This would allow us to do things like have a choice that just spawns a new menu... and it's "done" fuctnion (or whatever we decide to call these) will return true when the menu is closed. 

Something to keep in mind is where to position everything so that button presses are not registered for sub menus. In our previous project, that was a big issue. So if we pressed "select" on "sound options", the sound menu would open with the first option already being treated as if we'd pressed "select".